[{"E:\\menudropdown\\src\\index.js":"1","E:\\menudropdown\\src\\App.js":"2","E:\\menudropdown\\src\\reportWebVitals.js":"3","E:\\menudropdown\\src\\component\\FormRadio.js":"4","E:\\menudropdown\\src\\component\\Select.js":"5","E:\\menudropdown\\src\\component\\FormTextArea.js":"6","E:\\menudropdown\\src\\component\\FormCheckbox.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":1113,"mtime":1611955533294,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4299,"mtime":1611955220145,"results":"12","hashOfConfig":"9"},{"size":1113,"mtime":1611955265674,"results":"13","hashOfConfig":"9"},{"size":2452,"mtime":1611955311048,"results":"14","hashOfConfig":"9"},{"size":3826,"mtime":1611955189072,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1deh0t0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\menudropdown\\src\\index.js",[],["33","34"],"E:\\menudropdown\\src\\App.js",["35"],"E:\\menudropdown\\src\\reportWebVitals.js",[],"E:\\menudropdown\\src\\component\\FormRadio.js",["36","37","38","39"],"import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nclass FormRadio extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            soal: '',\r\n            jawabA: '',\r\n            jawabB: '',\r\n            jawabC: '',\r\n            jawabD: '',\r\n            kunci: '',\r\n            score: ''\r\n        }\r\n    }\r\n\r\n    handlerSoalChange = (event) => {\r\n        this.setState({\r\n            soal: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabAChange = (event) => {\r\n        this.setState({\r\n            jawabA: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabBChange = (event) => {\r\n        this.setState({\r\n            jawabB: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabCChange = (event) => {\r\n        this.setState({\r\n            jawabC: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabDChange = (event) => {\r\n        this.setState({\r\n            jawabD: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerKunciChange = (event) => {\r\n        this.setState({\r\n            kunci: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerScoreChange = (event) => {\r\n        this.setState({\r\n            score: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerSubmit = event => {\r\n        // alert(`${this.state.soal} ${this.state.jawabA} ${this.state.jawabB} ${this.state.jawabC} ${this.state.jawabD} ${this.state.kunci} ${this.state.score}`)\r\n        // console.log(`${this.state.soal}`)\r\n        // console.log(`${this.state.jawabA}`)\r\n        // console.log(`${this.state.jawabB}`)\r\n        // console.log(`${this.state.jawabC}`)\r\n        // console.log(`${this.state.jawabD}`)\r\n        // console.log(`${this.state.kunci}`)\r\n        // console.log(`${this.state.score}`)\r\n        event.preventDefault()\r\n        this.setState({\r\n            showGw: true\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\" >\r\n                        <div class=\"card-body\">\r\n                            {this.state.showGw && <p>1. {this.state.soal}</p>}\r\n                            {this.state.showGw && <a><input type=\"radio\" />{this.state.jawabA}</a>}\r\n                            {this.state.showGw && <a><input type=\"radio\" />{this.state.jawabC}</a>}<br />\r\n                            {this.state.showGw && <a><input type=\"radio\" />{this.state.jawabB}</a>}\r\n                            {this.state.showGw && <a><input type=\"radio\" />{this.state.jawabD}</a>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\" align=\"right\">\r\n                        <h1>Soal Radio</h1>\r\n                        <div class=\"card-body\">\r\n                            <label>Soal</label><br />\r\n                            <input type='text' value={this.state.soal} onChange={this.handlerSoalChange} /><br />\r\n                            <label>Jawab A</label><br />\r\n                            <input type='text' value={this.state.jawabA} onChange={this.handlerJawabAChange} /><br />\r\n                            <label>Jawab B</label><br />\r\n                            <input type='text' value={this.state.jawabB} onChange={this.handlerJawabBChange} /><br />\r\n                            <label>Jawab C</label><br />\r\n                            <input type='text' value={this.state.jawabC} onChange={this.handlerJawabCChange} /><br />\r\n                            <label>Jawab D</label><br />\r\n                            <input type='text' value={this.state.jawabD} onChange={this.handlerJawabDChange} /><br />\r\n                            <label>Kunci</label><br />\r\n                            <input type='text' value={this.state.kunci} onChange={this.handlerKunciChange} /><br />\r\n                            <label>Score</label><br />\r\n                            <input type='text' value={this.state.score} onChange={this.handlerScoreChange} /><br /><br /><br />\r\n                            <button type=\"submit\" onClick={this.handlerSubmit}>submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(FormRadio);","E:\\menudropdown\\src\\component\\Select.js",["40"],"import React, { Component } from 'react';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nclass Select extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n    }\r\n    render() {\r\n        console.log(\"Render\" + this.props.linkStatus[2])\r\n        return (\r\n            <div>\r\n                <div class=\"dropdown\" align=\"right\">\r\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        List Soal </button>\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                        <Link className={`nav-link ${this.props.linkStatus[0]}`} to=\"/redio\" >radio </Link>\r\n                        <Link className={`nav-link ${this.props.linkStatus[1]}`} to=\"/cekboks\" >checkbox </Link>\r\n                        <Link className={`nav-link ${this.props.linkStatus[2]}`} to=\"/teksarea\" >textarea </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;","E:\\menudropdown\\src\\component\\FormTextArea.js",[],"E:\\menudropdown\\src\\component\\FormCheckbox.js",["41","42","43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":3,"nodeType":"51","messageId":"52","endLine":6,"endColumn":7},{"ruleId":"53","severity":1,"message":"54","line":84,"column":51,"nodeType":"55","endLine":84,"endColumn":54},{"ruleId":"53","severity":1,"message":"54","line":85,"column":51,"nodeType":"55","endLine":85,"endColumn":54},{"ruleId":"53","severity":1,"message":"54","line":86,"column":51,"nodeType":"55","endLine":86,"endColumn":54},{"ruleId":"53","severity":1,"message":"54","line":87,"column":51,"nodeType":"55","endLine":87,"endColumn":54},{"ruleId":"56","severity":1,"message":"57","line":6,"column":5,"nodeType":"58","messageId":"59","endLine":10,"endColumn":6},{"ruleId":"53","severity":1,"message":"54","line":76,"column":51,"nodeType":"55","endLine":76,"endColumn":54},{"ruleId":"53","severity":1,"message":"54","line":77,"column":51,"nodeType":"55","endLine":77,"endColumn":54},{"ruleId":"53","severity":1,"message":"54","line":78,"column":51,"nodeType":"55","endLine":78,"endColumn":54},{"ruleId":"53","severity":1,"message":"54","line":79,"column":51,"nodeType":"55","endLine":79,"endColumn":54},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]